CREATE DATABASE HELLO14;

USE HELLO14;

CREATE TABLE STUDENTMARKS(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(100),
    SUBJECT VARCHAR(50),
    MARKS INT
);
INSERT INTO STUDENTMARKS (NAME,SUBJECT,MARKS) VALUES ("A","PYTHON",98);
INSERT INTO STUDENTMARKS (NAME,SUBJECT,MARKS) VALUES ("B","PYTHON",78);
INSERT INTO STUDENTMARKS (NAME,SUBJECT,MARKS) VALUES ("C","JAVA",68);
INSERT INTO STUDENTMARKS (NAME,SUBJECT,MARKS) VALUES ("D","JAVA",97);
INSERT INTO STUDENTMARKS (NAME,SUBJECT,MARKS) VALUES ("E","C++",52);
INSERT INTO STUDENTMARKS (NAME,SUBJECT,MARKS) VALUES ("F","C++",32);

SELECT * FROM STUDENTMARKS;

SELECT * FROM STUDENTMARKS WHERE MARKS > 80;
SELECT * FROM STUDENTMARKS WHERE MARKS >= 60;
SELECT * FROM STUDENTMARKS WHERE MARKS < 50;
SELECT * FROM STUDENTMARKS WHERE MARKS = 95;
SELECT * FROM STUDENTMARKS WHERE MARKS <= 60;

-- Increse marks by 10 for the students who scored less than 50
SET SQL_SAFE_UPDATES = 0;
SELECT * FROM STUDENTMARKS WHERE MARKS < 50;
UPDATE STUDENTMARKS SET MARKS = MARKS + 10 WHERE MARKS < 50;

-- Boost students with marks 60 or below by 5 marks
SELECT * FROM STUDENTMARKS WHERE MARKS <= 60;
UPDATE STUDENTMARKS SET MARKS = MARKS + 5 WHERE MARKS <= 60;

-- Add 2 bonus marks for students who scored more than 90
SELECT * FROM STUDENTMARKS WHERE MARKS > 90;
UPDATE STUDENTMARKS SET MARKS = MARKS + 2 WHERE MARKS > 90;

-- Award 3 extra marks to students scoring 80 or more
SELECT * FROM STUDENTMARKS WHERE MARKS >= 80;
UPDATE STUDENTMARKS SET MARKS = MARKS + 3 WHERE MARKS >= 80;

-- Reduce 1 mark for students who did not score exactly 95
SELECT * FROM STUDENTMARKS WHERE MARKS != 95;
UPDATE STUDENTMARKS SET MARKS = MARKS - 1 WHERE MARKS != 95;

-- Set full marks (100) for students who scored exactly 77 (e.g., bonus policy)
SELECT * FROM STUDENTMARKS WHERE MARKS = 77;
UPDATE STUDENTMARKS SET MARKS = 100 WHERE MARKS = 77;
SELECT * FROM STUDENTMARKS;

-- Delete students who scored below 50 (assume they failed)
SELECT * FROM STUDENTMARKS;
DELETE FROM STUDENTMARKS WHERE MARKS < 50;

-- Delete students who scored 60 or below
SELECT * FROM STUDENTMARKS;
DELETE FROM STUDENTMARKS WHERE MARKS <= 60;

-- Delete students who scored above 90 (testing or cleanup)
SELECT * FROM STUDENTMARKS;
DELETE FROM STUDENTMARKS WHERE MARKS > 90;

-- Delete students who scored 80 or more
DELETE FROM STUDENTMARKS WHERE MARKS >= 80;

-- Delete students whose marks are not equal to 95 (keep only top scorers)
DELETE FROM STUDENTMARKS WHERE MARKS != 95;

-- Delete students who scored exactly 76
DELETE FROM STUDENTMARKS WHERE MARKS = 76;

CREATE TABLE EMPLOYEES(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    NAME VARCHAR(100),
    DEPARTMENT VARCHAR(50),
    SALARY INT,
    ISACTIVE BOOL
);
INSERT INTO EMPLOYEES (NAME,DEPARTMENT,SALARY,ISACTIVE) VALUES ("A","IT",50000,TRUE);
INSERT INTO EMPLOYEES (NAME,DEPARTMENT,SALARY,ISACTIVE) VALUES ("B","IT",30000,FALSE);
INSERT INTO EMPLOYEES (NAME,DEPARTMENT,SALARY,ISACTIVE) VALUES ("C","FINANCE",20000,FALSE);
INSERT INTO EMPLOYEES (NAME,DEPARTMENT,SALARY,ISACTIVE) VALUES ("D","FINANCE",52000,TRUE);
INSERT INTO EMPLOYEES (NAME,DEPARTMENT,SALARY,ISACTIVE) VALUES ("E","HR",40000,FALSE);
INSERT INTO EMPLOYEES (NAME,DEPARTMENT,SALARY,ISACTIVE) VALUES ("F","HR",70000,FALSE);

SELECT * FROM EMPLOYEES;

--  IT department employees with salary > 40000
SELECT * FROM EMPLOYEES WHERE SALARY > 40000 AND DEPARTMENT = "IT";

-- Employees in HR or with salary < 35000
SELECT * FROM EMPLOYEES WHERE DEPARTMENT="HR" OR SALARY < 35000;

-- Employees not in HR
SELECT * FROM EMPLOYEES WHERE NOT DEPARTMENT = "HR";

-- Employees whose department is finance or salary greater than 30000 and active state.
SELECT * FROM EMPLOYEES WHERE (DEPARTMENT="FINANCE" OR SALARY > 30000) AND ISACTIVE = TRUE;

-- Update salaries with 2000 for active IT employees who earn less than 50000
UPDATE EMPLOYEES SET SALARY = SALARY + 2000 WHERE (DEPARTMENT="IT" AND ISACTIVE = TRUE) AND SALARY < 50000;
SELECT * FROM EMPLOYEES;

-- Make Finance or inactive employees' salary 10% less 
UPDATE EMPLOYEES SET SALARY = SALARY - (SALARY * 0.1) WHERE ISACTIVE = FALSE OR DEPARTMENT = "FINANACE";

-- Deactivate all employees not in the IT department
UPDATE EMPLOYEES SET ISACTIVE = FALSE WHERE NOT DEPARTMENT = "IT";
SELECT * FROM EMPLOYEES;

-- Delete employees from the HR department who are also inactive
DELETE FROM EMPLOYEES WHERE DEPARTMENT = "HR" OR ISACTIVE = FALSE;

--  Delete employees who are either from Finance or have a salary less than 35000
DELETE FROM EMPLOYEES WHERE DEPARTMENT = "FIANANCE" OR SALARY < 35000;

-- Delete all employees not in the IT department
DELETE FROM EMPLOYEES WHERE NOT DEPARTMENT = "IT";